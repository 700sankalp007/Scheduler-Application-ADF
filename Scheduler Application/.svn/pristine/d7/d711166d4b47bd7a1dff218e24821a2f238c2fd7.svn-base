package sc.common.model.entities;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

import sc.common.model.util.ObjectConversion;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 25 18:16:26 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SchedulerDateEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        SchedulerDateId,
        ServiceType,
        SchedulerFlag,
        SchedulerDate,
        CreatedBy,
        UpdatedBy,
        UpdationDate,
        CreationDate,
        SchedulerId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SCHEDULERDATEID = AttributesEnum.SchedulerDateId.index();
    public static final int SERVICETYPE = AttributesEnum.ServiceType.index();
    public static final int SCHEDULERFLAG = AttributesEnum.SchedulerFlag.index();
    public static final int SCHEDULERDATE = AttributesEnum.SchedulerDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATIONDATE = AttributesEnum.UpdationDate.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int SCHEDULERID = AttributesEnum.SchedulerId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SchedulerDateEOImpl() {
    }

    /**
     * Gets the attribute value for SchedulerDateId, using the alias name SchedulerDateId.
     * @return the value of SchedulerDateId
     */
    public BigDecimal getSchedulerDateId() {
        return (BigDecimal) getAttributeInternal(SCHEDULERDATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchedulerDateId.
     * @param value value to set the SchedulerDateId
     */
    public void setSchedulerDateId(BigDecimal value) {
        setAttributeInternal(SCHEDULERDATEID, value);
    }

    /**
     * Gets the attribute value for ServiceType, using the alias name ServiceType.
     * @return the value of ServiceType
     */
    public String getServiceType() {
        return (String) getAttributeInternal(SERVICETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ServiceType.
     * @param value value to set the ServiceType
     */
    public void setServiceType(String value) {
        setAttributeInternal(SERVICETYPE, value);
    }

    /**
     * Gets the attribute value for SchedulerFlag, using the alias name SchedulerFlag.
     * @return the value of SchedulerFlag
     */
    public String getSchedulerFlag() {
        return (String) getAttributeInternal(SCHEDULERFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchedulerFlag.
     * @param value value to set the SchedulerFlag
     */
    public void setSchedulerFlag(String value) {
        setAttributeInternal(SCHEDULERFLAG, value);
    }

    /**
     * Gets the attribute value for SchedulerDate, using the alias name SchedulerDate.
     * @return the value of SchedulerDate
     */
    public Timestamp getSchedulerDate() {
        return (Timestamp) getAttributeInternal(SCHEDULERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchedulerDate.
     * @param value value to set the SchedulerDate
     */
    public void setSchedulerDate(Timestamp value) {
        setAttributeInternal(SCHEDULERDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdationDate, using the alias name UpdationDate.
     * @return the value of UpdationDate
     */
    public Timestamp getUpdationDate() {
        return (Timestamp) getAttributeInternal(UPDATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdationDate.
     * @param value value to set the UpdationDate
     */
    public void setUpdationDate(Timestamp value) {
        setAttributeInternal(UPDATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for SchedulerId, using the alias name SchedulerId.
     * @return the value of SchedulerId
     */
    public BigDecimal getSchedulerId() {
        return (BigDecimal) getAttributeInternal(SCHEDULERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchedulerId.
     * @param value value to set the SchedulerId
     */
    public void setSchedulerId(BigDecimal value) {
        setAttributeInternal(SCHEDULERID, value);
    }

    /**
     * @param schedulerDateId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal schedulerDateId) {
        return new Key(new Object[] { schedulerDateId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("sc.common.model.entities.SchedulerDateEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("XX_SCH_SCHEDULER_DATE_SEQ", getDBTransaction());
        try {
            setSchedulerDateId(ObjectConversion.convertNumberToBigDecimal(seq.getSequenceNumber()));
            setSchedulerFlag("N");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

